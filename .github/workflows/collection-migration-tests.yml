name: Collection migration smoke test suite

on:
  push:
  pull_request:
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  base:
      name: common defs
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.7
        migration-scenario:
        - minimal
  reqs:
    name: install prereqs
    runs-on: ${{ jobs.base.matrix.os }}
    strategy:
      fail-fast: true
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ jobs.base.matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        version: ${{ jobs.base.matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install migration script deps
      run: python -m pip install -r requirements.txt
    - name: Install Ansible==devel
      run: python -m pip install git+https://github.com/ansible/ansible.git@devel

  migration:
    name: run migration
    needs: reqs
    runs-on: ${{ jobs.base.matrix.os }}
    strategy:
      fail-fast: true
    steps:
    - name: Configure user settings in Git
      run: |
        git config --global user.email "ansible_migration@example.com"
        git config --global user.name "Poor B"
    - name: Run migration scenario ${{ jobs.base.matrix.migration-scenario }}
      run: python -m migrate -m -s "scenarios/${{ jobs.base.matrix.migration-scenario }}"

  tests:
    name: run sanity and unit tests
    needs:
    - reqs
    - migration
    runs-on: ${{ jobs.base.matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 5
    steps:

      # TODO: also use the ansible from the .cache
    - name: [NON-FAILING] Run sanity tests against all migrated collections, one by one
      run: |
          for coll_dir in `ls .cache/collections/*/*/* -d`
          do
              (
                  echo "Sanity-testing ${coll_dir}..."
                  cd "${coll_dir}"
                  pwd
                  ansible-test --help
                  echo Injecting sanity test requirements into "'${coll_dir}/tests/sanity/requirements.txt'"...
                  mkdir -pv tests/sanity/
                  cp -v "${GITHUB_WORKSPACE}/.cache/releases/devel.git/test/sanity/requirements.txt" tests/sanity/requirements.txt
                  ansible-test sanity --requirements --python "${{ jobs.base.matrix.python-version }}" -vvv || :
              )
          done
    - name: Run unit tests against all migrated collections, one by one
      run: |
          # pip install solidfire-sdk-python
          # pip uninstall --yes enum34
          for coll_dir in `ls .cache/collections/*/*/* -d`
          do
              (
                  echo "Unit-testing ${coll_dir}..."
                  cd "${coll_dir}"
                  pwd
                  [[ ! -d "tests/unit" ]] && echo This collection does not have unit tests. Skipping... && continue
                  ansible-test --help
                  echo Injecting unit test requirements into "'${coll_dir}/tests/unit/requirements.txt'"...
                  # cp -v "${GITHUB_WORKSPACE}/.cache/releases/devel.git/test/units/requirements.txt" tests/unit/requirements.txt
                  # HACK:
                  # f5 deps unconditionally depend on enum34 which
                  # breaks on Pythons that have enum module in stdlib
                  grep -vE ^solidfire-sdk- "${GITHUB_WORKSPACE}/.cache/releases/devel.git/test/units/requirements.txt" | tee tests/unit/requirements.txt
                  ansible-test units --requirements --python "${{ jobs.base.matrix.python-version }}" -vvv
              )
          done
