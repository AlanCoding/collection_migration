name: Collection migration smoke test suite

on:
  push:
  pull_request:
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  tests:
    name: ðŸ‘·
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 5
      matrix:
        python-version:
        - 3.7
        os:
        - ubuntu-18.04
        # - ubuntu-16.04
        # - macOS-10.14
        # - windows-2019
        # - windows-2016
        migration-scenario:
        - bcs
        - newworld

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: >-
        sudo apt remove --yes ansible
    - name: Uninstall previously installed Ansible via Pip
      run: >-
        python -m
        pip uninstall
        ansible
    - name: Install migration script deps
      run: >-
        python -m
        pip install
        git+https://github.com/ansible/ansible.git@devel
        logzero
        pytest
        pytest-xdist
        redbaron
    - name: Configure user settings in Git
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
    - name: Run migration scenario ${{ matrix.migration-scenario }}
      run: >-
        python -m
        migrate
        -s "scenarios/${{ matrix.migration-scenario }}"
    - name: Install migrated collection test deps
      run: >-
        python -m
        pip install
        mock
    - name: Run unit tests against all migrated collections, one by one
      run: |
          for coll_dir in `ls .cache/collections/*/*/* -d`
          do
              (
                  echo "Testing ${coll_dir}..."
                  cd "${coll_dir}"
                  [[ ! -d "tests/unit" ]] && >&2 echo This collection does not have unit tests. Skipping... && continue
                  ansible-test --help
                  ansible-test units --requirements --python "${{ matrix.python-version }}" -vvv
              )
          done
