name: Linters

on:
  push:
  pull_request:
  schedule:
  # Run every Friday at 17:53 UTC
  # https://crontab.guru/#53_17_*_*_5
  - cron: 53 17 * * 5

jobs:
  linters:
    name: pre-commit
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version:
        - 3.8
        os:
        - ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Log Python version
      run: >-
        python --version
    - name: Log Python location
      run: >-
        which python
    - name: Log Python env
      run: >-
        python -m sysconfig
    - name: set PY
      run: echo "::set-env name=PY::$(python -VV | sha256sum | cut -d' ' -f1)"
    - name: Pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ env.PY }}-pip-${{ hashFiles('requirements.in') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|2020-02-19|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Install pre-commit
      run: >-
        python -m pip
        install --upgrade
        pre-commit
    - name: Log the list of packages
      run: >-
        python -m
        pip freeze --all
    - name: Pre-fetch pre-commit hooks
      # This is to separate test step from deps install
      run: >-
        python -m
        pre_commit
        install-hooks
    - name: Test with pre-commit
      run: >-
        python -m
        pre_commit
        run --all-files -vv
